###############################################################################
# This file is part of the Openfirewall.                                    #
#                                                                             #
# Openfirewall is free software; you can redistribute it and/or modify               #
# it under the terms of the GNU General Public License as published by        #
# the Free Software Foundation; either version 2 of the License, or           #
# (at your option) any later version.                                         #
#                                                                             #
# Openfirewall is distributed in the hope that it will be useful,                    #
# but WITHOUT ANY WARRANTY; without even the implied warranty of              #
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the               #
# GNU General Public License for more details.                                #
#                                                                             #
# You should have received a copy of the GNU General Public License           #
# along with Openfirewall; if not, write to the Free Software                        #
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA    #
#                                                                             #
# Makefiles are based on LFSMake, which is                                    #
# Copyright (C) 2002 Rod Roard <rod@sunsetsystems.com>                        #
#                                                                             #
# Modifications by:                                                           #
# ??-12-2003 Mark Wormgoor < mark@wormgoor.com>                               #
#          - Modified Makefile for Openfirewall build                                #
#                                                                             #
# $Id: perl-dbd-sqlite 8094 2016-02-21 11:05:20Z owes $
#                                                                             #
###############################################################################

###############################################################################
# Definitions
###############################################################################

include Config

PKG_NAME   = DBD-SQLite
LFS_NAME   = perl-dbd-sqlite
# Even minor is production, odd is development
VER        = 1.50
HOST_ARCH  = all
OTHER_SRC  = yes

THISAPP    = $(PKG_NAME)-$(VER)
DL_FILE    = $(THISAPP).tar.gz
DL_FROM    = $(URL_CPAN)/I/IS/ISHIGAKI
DIR_APP    = $(DIR_SRC)/$(THISAPP)
TARGET     = $(DIR_INFO)/$(STAGE_ORDER)_$(STAGE)/$(LFS_NAME)-$(VER)

###############################################################################
# Top-level Rules
###############################################################################

objects = $(DL_FILE)

$(DL_FILE) = $(DL_FROM)/$(DL_FILE)

$(DL_FILE)_MD5 = d56eebfb5f2a14be9413b025e7dca9fe

install : $(TARGET)

check : $(patsubst %,$(DIR_CHK)/%,$(objects))

download :$(patsubst %,$(DIR_DL)/%,$(objects))

md5 : $(subst %,%_MD5,$(objects))

###############################################################################
# Downloading, checking, md5sum
###############################################################################

$(patsubst %,$(DIR_CHK)/%,$(objects)) :
	@$(CHECK)

$(patsubst %,$(DIR_DL)/%,$(objects)) :
	@$(LOAD)

$(subst %,%_MD5,$(objects)) :
	@$(MD5)

###############################################################################
# Installation Details
###############################################################################

$(TARGET) : $(firstword $(MAKEFILE_LIST)) $(patsubst %,$(DIR_DL)/%,$(objects))
	@$(PREBUILD)
	@rm -rf $(DIR_APP) && cd $(DIR_SRC) && tar zxf $(DIR_DL)/$(DL_FILE)
	#
	#cd $(DIR_APP) && patch -Np1 -i $(DIR_PATCHES)/$(LFS_NAME)-$(VER)_61ae7b0.patch

	# DBD-SQLite-1.37 include sqlite-3.7.12.1 (as the test show when using unmodified code)
	# Use system libsqlite code like debian, fedora : less code, smaller size
	# Use our CFLAGS instead of OPTIMIZE value
	cd $(DIR_APP) && sed -i -e 's/^if ( 0 ) /if ( 1 ) /' -e 's/\-O2//' Makefile.PL
	cd $(DIR_APP) && perl Makefile.PL
	cd $(DIR_APP) && make
ifeq "$(RUNNING_TEST)" "yes"
	# If a symbol is missing during test, the symbol need to be added during sqlite package compilation
	# In case of other test error, try adding TEST_VERBOSE=1
	cd $(DIR_APP) && make test &> $(DIR_TEST)/$(THISAPP)-$(STAGE_ORDER).log
endif
	cd $(DIR_APP) && make install
	# remove sqlite embedded headers that are installed even when system sqlite is used
##	rm -r /usr/lib/perl5/site_perl/*/*-linux/auto/share/dist/DBD-SQLite

	@rm -rf $(DIR_APP)
	@$(POSTBUILD)
