###############################################################################
# This file is part of the Openfirewall.                                    #
#                                                                             #
# Openfirewall is free software; you can redistribute it and/or modify               #
# it under the terms of the GNU General Public License as published by        #
# the Free Software Foundation; either version 2 of the License, or           #
# (at your option) any later version.                                         #
#                                                                             #
# Openfirewall is distributed in the hope that it will be useful,                    #
# but WITHOUT ANY WARRANTY; without even the implied warranty of              #
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the               #
# GNU General Public License for more details.                                #
#                                                                             #
# You should have received a copy of the GNU General Public License           #
# along with Openfirewall; if not, write to the Free Software                        #
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA    #
#                                                                             #
# Makefiles are based on LFSMake, which is                                    #
# Copyright (C) 2002 Rod Roard <rod@sunsetsystems.com>                        #
#                                                                             #
# Modifications by:                                                           #
# ??-12-2003 Mark Wormgoor < mark@wormgoor.com>                               #
#          - Modified Makefile for Openfirewall build                                #
#                                                                             #
# $Id: gmp 7927 2015-03-07 18:21:03Z owes $
#                                                                             #
###############################################################################

###############################################################################
# Definitions
###############################################################################

include Config

PKG_NAME   = gmp
VER        = 6.1.2
HOST_ARCH  = all
OTHER_SRC  = yes

THISAPP    = $(PKG_NAME)-$(VER)
DL_FILE    = $(THISAPP).tar.xz
#DL_FROM    = $(URL_GNU)/$(PKG_NAME)
DL_FROM    = http://ftp.gnu.org/gnu/gmp
# Version is 6.0.0a but 6.0.0 is in archive
DIR_APP    = $(DIR_SRC)/gmp-6.1.2
TARGET     = $(DIR_INFO)/$(STAGE_ORDER)_$(STAGE)/$(THISAPP)

# gcc hardened spec is not yet used during normal build, so script need to set that
# In case of rebuild after gcc chap6 is compiled, you would see no change, tweeeking LDFLAGS
LDFLAGS += -Wl,-z,relro,-z,now

###############################################################################
# Top-level Rules
###############################################################################

objects = $(DL_FILE)

$(DL_FILE) = $(DL_FROM)/$(DL_FILE)

$(DL_FILE)_MD5 = f58fa8001d60c4c77595fbbb62b63c1d

install : $(TARGET)

check : $(patsubst %,$(DIR_CHK)/%,$(objects))

download :$(patsubst %,$(DIR_DL)/%,$(objects))

md5 : $(subst %,%_MD5,$(objects))

###############################################################################
# Downloading, checking, md5sum
###############################################################################

$(patsubst %,$(DIR_CHK)/%,$(objects)) :
	@$(CHECK)

$(patsubst %,$(DIR_DL)/%,$(objects)) :
	@$(LOAD)

$(subst %,%_MD5,$(objects)) :
	@$(MD5)

###############################################################################
# Installation Details
###############################################################################

$(TARGET) : $(firstword $(MAKEFILE_LIST)) $(patsubst %,$(DIR_DL)/%,$(objects))
	@$(PREBUILD)
	@rm -rf $(DIR_APP) && cd $(DIR_SRC) && tar xf $(DIR_DL)/$(DL_FILE)

	# we do not build the C++ part (--enable-cxx)
	# and Berkeley MP compatibility library (--enable-mpbsd)

ifeq "$(STAGE)" "toolchain"
	cd $(DIR_APP) && ./configure --prefix=/$(TOOLS_DIR) --enable-cxx --disable-static --build=$(MACHINE)-linux
	cd $(DIR_APP) && make -j $(PARALLELISM)
	cd $(DIR_APP) && make install
endif

ifeq "$(STAGE)" "base"
	# --build=i486-linux force 32-bits ABI on an AMD 64-bits CPU
	# and disable sse2 intructions usage on i686
	# on sparc64 and powerpc64, force 32-bits userspace
	cd $(DIR_APP) && \
		./configure --prefix=/usr --enable-cxx --disable-static --build=$(MACHINE)-linux

	cd $(DIR_APP) && make -j $(PARALLELISM)

ifeq "$(RUNNING_TEST)" "yes"
	cd $(DIR_APP) && make -j 1 check &> $(DIR_TEST)/$(THISAPP)-$(STAGE_ORDER).log
	cd $(DIR_APP) && awk '/tests passed/{total+=$$2} ; END {print "total tests passed="total}' \
		$(DIR_TEST)/$(THISAPP)-$(STAGE_ORDER).log \
		>> $(DIR_TEST)/$(THISAPP)-$(STAGE_ORDER).log
	# should be 145 tests passed at the end of the log
endif

	cd $(DIR_APP) && make install
endif

	@rm -rf $(DIR_APP)
	@$(POSTBUILD)
