--- setserial-2.17/setserial.c.orig	2000-01-27 16:40:52.000000000 +0100
+++ setserial-2.17/setserial.c	2012-05-07 17:35:01.000000000 +0200
@@ -41,22 +41,22 @@
 	int id;
 	char *name;
 } serial_type_tbl[] = {
-	PORT_UNKNOWN,	"unknown",
-	PORT_8250,	"8250",
-	PORT_16450,	"16450",
-	PORT_16550,	"16550",
-	PORT_16550A,	"16550A",
-	PORT_CIRRUS,	"Cirrus",
-	PORT_16650,	"16650",
-	PORT_16650V2, 	"16650V2",
-	PORT_16750,	"16750",
-	PORT_16C950,	"16950/954",
-	PORT_16C950,	"16950",
-	PORT_16C950,	"16954",
-	PORT_16654,	"16654",
-	PORT_16850,	"16850",
-	PORT_UNKNOWN,	"none",
-	-1,		NULL
+	{ PORT_UNKNOWN,	"unknown" },
+	{ PORT_8250,	"8250" },
+	{ PORT_16450,	"16450" },
+	{ PORT_16550,	"16550" },
+	{ PORT_16550A,	"16550A" },
+	{ PORT_CIRRUS,	"Cirrus" },
+	{ PORT_16650,	"16650" },
+	{ PORT_16650V2, "16650V2" },
+	{ PORT_16750,	"16750" },
+	{ PORT_16C950,	"16950/954" },
+	{ PORT_16C950,	"16950" },
+	{ PORT_16C950,	"16954" },
+	{ PORT_16654,	"16654" },
+	{ PORT_16850,	"16850" },
+	{ PORT_UNKNOWN,	"none" },
+	{ -1,		NULL }
 };
 
 #define CMD_FLAG	1
@@ -89,44 +89,44 @@
 	int	level;
 	int	flags;
 } flag_type_tbl[] = {
-	CMD_FLAG,	"spd_normal",	0,		ASYNC_SPD_MASK,	2, 0,
-	CMD_FLAG,	"spd_hi",	ASYNC_SPD_HI, 	ASYNC_SPD_MASK, 0, 0,
-	CMD_FLAG,	"spd_vhi",	ASYNC_SPD_VHI,	ASYNC_SPD_MASK,	0, 0,
-	CMD_FLAG,	"spd_shi",	ASYNC_SPD_SHI,	ASYNC_SPD_MASK,	0, 0,
-	CMD_FLAG,	"spd_warp",	ASYNC_SPD_WARP,	ASYNC_SPD_MASK,	0, 0,
-	CMD_FLAG,	"spd_cust",	ASYNC_SPD_CUST,	ASYNC_SPD_MASK,	0, 0,
+	{ CMD_FLAG,	"spd_normal",	0,		ASYNC_SPD_MASK,	2, 0 },
+	{ CMD_FLAG,	"spd_hi",	ASYNC_SPD_HI, 	ASYNC_SPD_MASK, 0, 0 },
+	{ CMD_FLAG,	"spd_vhi",	ASYNC_SPD_VHI,	ASYNC_SPD_MASK,	0, 0 },
+	{ CMD_FLAG,	"spd_shi",	ASYNC_SPD_SHI,	ASYNC_SPD_MASK,	0, 0 },
+	{ CMD_FLAG,	"spd_warp",	ASYNC_SPD_WARP,	ASYNC_SPD_MASK,	0, 0 },
+	{ CMD_FLAG,	"spd_cust",	ASYNC_SPD_CUST,	ASYNC_SPD_MASK,	0, 0 },
 	
-	CMD_FLAG, 	"SAK", 		ASYNC_SAK, 	ASYNC_SAK, 	0, FLAG_CAN_INVERT,
-	CMD_FLAG,	"Fourport",	ASYNC_FOURPORT, ASYNC_FOURPORT,	0, FLAG_CAN_INVERT,
-	CMD_FLAG,	"hup_notify",	ASYNC_HUP_NOTIFY, ASYNC_HUP_NOTIFY, 0, FLAG_CAN_INVERT,
-	CMD_FLAG,	"skip_test",	ASYNC_SKIP_TEST,ASYNC_SKIP_TEST,2, FLAG_CAN_INVERT,
-	CMD_FLAG,	"auto_irq",	ASYNC_AUTO_IRQ,	ASYNC_AUTO_IRQ,	2, FLAG_CAN_INVERT,
-	CMD_FLAG,	"split_termios", ASYNC_SPLIT_TERMIOS, ASYNC_SPLIT_TERMIOS, 2, FLAG_CAN_INVERT,
-	CMD_FLAG,	"session_lockout", ASYNC_SESSION_LOCKOUT, ASYNC_SESSION_LOCKOUT, 2, FLAG_CAN_INVERT,
-	CMD_FLAG,	"pgrp_lockout", ASYNC_PGRP_LOCKOUT, ASYNC_PGRP_LOCKOUT, 2, FLAG_CAN_INVERT,
-	CMD_FLAG,	"callout_nohup", ASYNC_CALLOUT_NOHUP, ASYNC_CALLOUT_NOHUP, 2, FLAG_CAN_INVERT,
-	CMD_FLAG,	"low_latency", ASYNC_LOW_LATENCY, ASYNC_LOW_LATENCY, 0, FLAG_CAN_INVERT,
-	CMD_PORT,	"port",		0,		0,		0, FLAG_NEED_ARG,
-	CMD_IRQ,	"irq",		0,		0,		0, FLAG_NEED_ARG,
-	CMD_DIVISOR,	"divisor",	0,		0,		0, FLAG_NEED_ARG,
-	CMD_TYPE,	"uart",		0,		0,		0, FLAG_NEED_ARG,
-	CMD_BASE,	"base",		0,		0,		0, FLAG_NEED_ARG,
-	CMD_BASE,	"baud_base",	0,		0,		0, FLAG_NEED_ARG,
-	CMD_DELAY,	"close_delay",	0,		0,		0, FLAG_NEED_ARG,
-	CMD_WAIT,	"closing_wait",	0,		0,		0, FLAG_NEED_ARG,
-	CMD_CONFIG,	"autoconfig",	0,		0,		0, 0,
-	CMD_CONFIG,	"autoconfigure",0,		0,		0, 0,
-	CMD_GETMULTI,	"get_multiport",0,		0,		0, 0,
-	CMD_SETMULTI,	"set_multiport",0,		0,		0, 0,
+	{ CMD_FLAG, 	"SAK", 		ASYNC_SAK, 	ASYNC_SAK, 	0, FLAG_CAN_INVERT },
+	{ CMD_FLAG,	"Fourport",	ASYNC_FOURPORT, ASYNC_FOURPORT,	0, FLAG_CAN_INVERT },
+	{ CMD_FLAG,	"hup_notify",	ASYNC_HUP_NOTIFY, ASYNC_HUP_NOTIFY, 0, FLAG_CAN_INVERT },
+	{ CMD_FLAG,	"skip_test",	ASYNC_SKIP_TEST,ASYNC_SKIP_TEST,2, FLAG_CAN_INVERT },
+	{ CMD_FLAG,	"auto_irq",	ASYNC_AUTO_IRQ,	ASYNC_AUTO_IRQ,	2, FLAG_CAN_INVERT },
+	{ CMD_FLAG,	"split_termios", ASYNC_SPLIT_TERMIOS, ASYNC_SPLIT_TERMIOS, 2, FLAG_CAN_INVERT },
+	{ CMD_FLAG,	"session_lockout", ASYNC_SESSION_LOCKOUT, ASYNC_SESSION_LOCKOUT, 2, FLAG_CAN_INVERT },
+	{ CMD_FLAG,	"pgrp_lockout", ASYNC_PGRP_LOCKOUT, ASYNC_PGRP_LOCKOUT, 2, FLAG_CAN_INVERT },
+	{ CMD_FLAG,	"callout_nohup", ASYNC_CALLOUT_NOHUP, ASYNC_CALLOUT_NOHUP, 2, FLAG_CAN_INVERT },
+	{ CMD_FLAG,	"low_latency", ASYNC_LOW_LATENCY, ASYNC_LOW_LATENCY, 0, FLAG_CAN_INVERT },
+	{ CMD_PORT,	"port",		0,		0,		0, FLAG_NEED_ARG },
+	{ CMD_IRQ,	"irq",		0,		0,		0, FLAG_NEED_ARG },
+	{ CMD_DIVISOR,	"divisor",	0,		0,		0, FLAG_NEED_ARG },
+	{ CMD_TYPE,	"uart",		0,		0,		0, FLAG_NEED_ARG },
+	{ CMD_BASE,	"base",		0,		0,		0, FLAG_NEED_ARG },
+	{ CMD_BASE,	"baud_base",	0,		0,		0, FLAG_NEED_ARG },
+	{ CMD_DELAY,	"close_delay",	0,		0,		0, FLAG_NEED_ARG },
+	{ CMD_WAIT,	"closing_wait",	0,		0,		0, FLAG_NEED_ARG },
+	{ CMD_CONFIG,	"autoconfig",	0,		0,		0, 0 },
+	{ CMD_CONFIG,	"autoconfigure",0,		0,		0, 0 },
+	{ CMD_GETMULTI,	"get_multiport",0,		0,		0, 0 },
+	{ CMD_SETMULTI,	"set_multiport",0,		0,		0, 0 },
 #ifdef TIOCGHAYESESP
-	CMD_RX_TRIG,    "rx_trigger",   0,              0,              0, FLAG_NEED_ARG,
-	CMD_TX_TRIG,    "tx_trigger",   0,              0,              0, FLAG_NEED_ARG,
-	CMD_FLOW_OFF,   "flow_off",     0,              0,              0, FLAG_NEED_ARG,
-	CMD_FLOW_ON,    "flow_on",      0,              0,              0, FLAG_NEED_ARG,
-	CMD_RX_TMOUT,   "rx_timeout",   0,              0,              0, FLAG_NEED_ARG,
-	CMD_DMA_CHAN,   "dma_channel",  0,              0,              0, FLAG_NEED_ARG,
+	{ CMD_RX_TRIG,    "rx_trigger",   0,              0,              0, FLAG_NEED_ARG },
+	{ CMD_TX_TRIG,    "tx_trigger",   0,              0,              0, FLAG_NEED_ARG },
+	{ CMD_FLOW_OFF,   "flow_off",     0,              0,              0, FLAG_NEED_ARG },
+	{ CMD_FLOW_ON,    "flow_on",      0,              0,              0, FLAG_NEED_ARG },
+	{ CMD_RX_TMOUT,   "rx_timeout",   0,              0,              0, FLAG_NEED_ARG },
+	{ CMD_DMA_CHAN,   "dma_channel",  0,              0,              0, FLAG_NEED_ARG },
 #endif
-	0,		0,		0,		0,		0, 0,
+	{ 0,		0,		0,		0,		0, 0 },
 };
 	
 char *serial_type(int id)
